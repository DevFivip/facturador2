<?php

namespace App\CoreFacturalo\Services\Extras;

use GuzzleHttp\Client;
use Carbon\Carbon;
use Carbon\CarbonPeriod;
use DiDom\Document as DiDom;

class ExchangeRate
{
    const URL_CONSULT = 'https://www.sbs.gob.pe/app/pp/SISTIP_PORTAL/Paginas/Publicacion/TipoCambioPromedio.aspx';

    protected $client;

    public function __construct()
    {
        $this->client = new Client();
    }


    public function search($date_of_exchange_rate)
    {
        $response = $this->client->request('POST', self::URL_CONSULT, [
            'form_params' => [
                'ctl00$MainScriptManager' => 'ctl00$cphContent$updConsulta|ctl00$cphContent$btnConsultar',
                'ctl00_MainScriptManager_TSM' => ' ;;System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35:en-US:b7585254-495e-4311-9545-1f910247aca5:ea597d4b:b25378d2;Telerik.Web.UI:en-US:ab312d5a-8d8b-4310-a879-b25aeb34b5c7:16e4e7cd:f7645509:22a6274a:88144a7a:8674cba1:7c926187:b7778d6c:c08e9f8a:59462f1:a51ee93e:58366029:24ee1bba:e330518b:2003d0b8:c128760b:1e771326:c8618e41:e4f8f289:1a73651d:333f8d94;',
                'ctl00$cphContent$rdpDate' => '2018-12-13',
'ctl00$cphContent$rdpDate$dateInput' => '13/12/2018',
'ctl00_cphContent_rdpDate_dateInput_ClientState' => '{"enabled":true,"emptyMessage":"","validationText":"2018-12-13-00-00-00","valueAsString":"2018-12-13-00-00-00","minDateStr":"1000-01-01-00-00-00","maxDateStr":"2018-12-31-00-00-00","lastSetTextBoxValue":"13/12/2018"}',
'ctl00_cphContent_rdpDate_calendar_SD' => '[[2018,12,13]]',
'ctl00_cphContent_rdpDate_calendar_AD' => '[[1000,1,1],[2018,12,31],[2018,12,31]]',
'ctl00_cphContent_rdpDate_ClientState' => '{"minDateStr":"1000-01-01-00-00-00","maxDateStr":"2018-12-31-00-00-00"}',
//'ctl00_cphContent_rgTipoCambio_rghcMenu_ClientState: '
//'ctl00_cphContent_rgTipoCambio_ClientState:
//'ctl00_cphContent_rgMesaNegociaciones_rghcMenu_ClientState:
//'ctl00_cphContent_rgMesaNegociaciones_ClientState:
//'ctl00_cphContent_rgMercadoProfesional_rghcMenu_ClientState:
//'ctl00_cphContent_rgMercadoProfesional_ClientState:
//'__EVENTTARGET:
//'__EVENTARGUMENT:
'__VIEWSTATE' => ' /wEPDwUKLTczMTk4Mzc4Mg9kFgJmD2QWAgIDD2QWAgIDD2QWAgIBD2QWAmYPZBYQAgEPDxYCHgRUZXh0BUFDT1RJWkFDScOTTiBERSBPRkVSVEEgWSBERU1BTkRBIFRJUE8gREUgQ0FNQklPIFBST01FRElPIFBPTkRFUkFET2RkAgMPDxYMHgxTZWxlY3RlZERhdGUGAEDLGKBc1ggeHEVuYWJsZUVtYmVkZGVkQmFzZVN0eWxlc2hlZXRnHgdNaW5EYXRlBgDAjmeYAWAEHgdNYXhEYXRlBgCAS+iybtYIHhJSZXNvbHZlZFJlbmRlck1vZGULKXJUZWxlcmlrLldlYi5VSS5SZW5kZXJNb2RlLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQBHhVFbmFibGVFbWJlZGRlZFNjcmlwdHNnZBYEZg8UKwAIDxYYHg1MYWJlbENzc0NsYXNzBQdyaUxhYmVsHgxFbXB0eU1lc3NhZ2VlHwAFEzIwMTgtMTItMDgtMDAtMDAtMDAfAmcfAwYAwI5nmAFgBB8EBgCAS+iybtYIHhFfc2tpcE1NVmFsaWRhdGlvbmgeBFNraW4FBU1ldHJvHhdFbmFibGVBamF4U2tpblJlbmRlcmluZ2gfBmcfBQsrBAEeEUVuYWJsZUFyaWFTdXBwb3J0aGQWCB4FV2lkdGgbAAAAAAAAWUAHAAAAHgpSZXNpemVNb2RlCylyVGVsZXJpay5XZWIuVUkuUmVzaXplTW9kZSwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxNi4xLjIyNS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0AB4IQ3NzQ2xhc3MFEXJpVGV4dEJveCByaUhvdmVyHgRfIVNCAoICFggfDRsAAAAAAABZQAcAAAAfDgsrBQAfDwURcmlUZXh0Qm94IHJpRXJyb3IfEAKCAhYIHw0bAAAAAAAAWUAHAAAAHw4LKwUAHw8FE3JpVGV4dEJveCByaUZvY3VzZWQfEAKCAhYGHw0bAAAAAAAAWUAHAAAAHw8FE3JpVGV4dEJveCByaUVuYWJsZWQfEAKCAhYIHw0bAAAAAAAAWUAHAAAAHw4LKwUAHw8FFHJpVGV4dEJveCByaURpc2FibGVkHxACggIWCB8NGwAAAAAAAFlABwAAAB8OCysFAB8PBRFyaVRleHRCb3ggcmlFbXB0eR8QAoICFggfDRsAAAAAAABZQAcAAAAfDgsrBQAfDwUQcmlUZXh0Qm94IHJpUmVhZB8QAoICZAICDxQrAA0PFhQFDUN1bHR1cmVJbmZvSUQoKW1TeXN0ZW0uR2xvYmFsaXphdGlvbi5DdWx0dXJlSW5mbywgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BWVzLUVTBQ1TZWxlY3RlZERhdGVzDwWPAVRlbGVyaWsuV2ViLlVJLkNhbGVuZGFyLkNvbGxlY3Rpb25zLkRhdGVUaW1lQ29sbGVjdGlvbiwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxNi4xLjIyNS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0FCsAAQYAQMsYoFzWCAUERm9jRAYAgEvosm7WCAURRW5hYmxlTXVsdGlTZWxlY3RoBQ9SZW5kZXJJbnZpc2libGVnBQ1DdWx0dXJlTmFtZUlEBQVlcy1FUwULU3BlY2lhbERheXMPBZIBVGVsZXJpay5XZWIuVUkuQ2FsZW5kYXIuQ29sbGVjdGlvbnMuQ2FsZW5kYXJEYXlDb2xsZWN0aW9uLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQUKwABFgYFA0lTUgspgAFUZWxlcmlrLldlYi5VSS5DYWxlbmRhci5SZWN1cnJpbmdFdmVudHMsIFRlbGVyaWsuV2ViLlVJLCBWZXJzaW9uPTIwMTYuMS4yMjUuNDAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MTIxZmFlNzgxNjViYTNkNBAFAUVoBQlJdGVtU3R5bGUPBXdTeXN0ZW0uV2ViLlVJLldlYkNvbnRyb2xzLlRhYmxlSXRlbVN0eWxlLCBTeXN0ZW0uV2ViLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49YjAzZjVmN2YxMWQ1MGEzYRYEHw8FB3JjVG9kYXkfEAICBQRNaW5EBgDAjmeYAWAEBQlDdWx0dXJlSUQCihgFBE1heEQGAIBL6LJu1ggPFgwfBmcfAmcfDGgfCgUFTWV0cm8fBQsrBAEfC2hkZBYEHw8FC3JjTWFpblRhYmxlHxACAhYEHw8FDHJjT3RoZXJNb250aB8QAgJkFgQfDwUKcmNTZWxlY3RlZB8QAgJkFgQfDwUKcmNEaXNhYmxlZB8QAgIWBB8PBQxyY091dE9mUmFuZ2UfEAICFgQfDwUJcmNXZWVrZW5kHxACAhYEHw8FB3JjSG92ZXIfEAICFgQfDwUvUmFkQ2FsZW5kYXJNb250aFZpZXcgUmFkQ2FsZW5kYXJNb250aFZpZXdfTWV0cm8fEAICFgQfDwUJcmNWaWV3U2VsHxACAmQCCQ9kFgJmD2QWAgIBDw8WAh8ABRxUaXBvIGRlIENhbWJpbyBhbCAwOC8xMi8yMDE4ZGQCCw8PFgIeB1Zpc2libGVnZBYCAgEPPCsADgIAFCsAAg8WDB4LXyFJdGVtQ291bnQCAR8LaB8CZx8FCysEAR8GZx4LXyFEYXRhQm91bmRnZBcEBRNTZWxlY3RlZENlbGxJbmRleGVzFgAFD1NlbGVjdGVkSW5kZXhlcxYABQtFZGl0SW5kZXhlcxYABQhQYWdlU2l6ZQIoARYCFgsPAgMUKwADFCsABRYEHghEYXRhVHlwZRkrAh4Eb2luZAICZGRkBQ1zdHJfZGVzTW9uZWRhFCsABRYEHxQZKwIfFQIDZGRkBRRzdHJfbnVtQ290aUNvbXByYVB1YhQrAAUWBB8UGSsCHxUCBGRkZAUTc3RyX251bUNvdGlWZW50YVB1YmRlFCsAAAspeVRlbGVyaWsuV2ViLlVJLkdyaWRDaGlsZExvYWRNb2RlLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQBPCsABwALKXRUZWxlcmlrLldlYi5VSS5HcmlkRWRpdE1vZGUsIFRlbGVyaWsuV2ViLlVJLCBWZXJzaW9uPTIwMTYuMS4yMjUuNDAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MTIxZmFlNzgxNjViYTNkNAEWAh4EX2Vmc2RkFhAeCkRhdGFNZW1iZXJlHxJmHgVfcWVsdBkpcFNJU1RJUC5Nb2RlbG8uRW50aWRhZGVzLlRpcG9DYW1iaW9Qcm9tZWRpbywgU0lTVElQLk1vZGVsbywgVmVyc2lvbj0xLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPW51bGweFElzQm91bmRUb0ZvcndhcmRPbmx5aB4FXyFDSVMXAB4EX2hsbQsrCAEfE2ceCERhdGFLZXlzFgBkZhYIZg8UKwADD2QWAh4Fc3R5bGUFC3dpZHRoOjEwMCU7ZGRkAgEPFgUUKwACDxYQHxdlHxJmHxgZKwofGWgfGhcAHxsLKwgBHxNnHxwWAGQXBAULXyFJdGVtQ291bnRmBQZfIURTSUNmBQhfIVBDb3VudAIBBRBDdXJyZW50UGFnZUluZGV4ZhYCHgNfc2UWAh4CX2NmZBYDZGRkFgJnZxYCZg9kFgZmD2QWBGYPDxYGHw8FCCByZ1BhZ2VyHxACAh8RaGQWAmYPDxYCHgpDb2x1bW5TcGFuAgNkFgJmD2QWAgIBD2QWAmYPZBYCAgQPDxYEHw8FEHJnV3JhcCByZ0FkdlBhcnQfEAICZBYIAgEPFCsAAjwrAAgBAA8WAh4XaW5wdXRfZXZlbnRzX09uS2V5UHJlc3MFxAJmdW5jdGlvbihzZW5kZXIsIGFyZ3Mpe2lmKGFyZ3MuZ2V0X2tleUNvZGUoKSA9PSAxMyl7c2VuZGVyLnNldF92YWx1ZShzZW5kZXIuZ2V0X3RleHRCb3hWYWx1ZSgpKTsgYXJncy5nZXRfZG9tRXZlbnQoKS5zdG9wUHJvcGFnYXRpb24oKTthcmdzLmdldF9kb21FdmVudCgpLnByZXZlbnREZWZhdWx0KCk7dmFyIGJ1dHRvbiA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdUaXBvQ2FtYmlvX2N0bDAwX2N0bDAyX2N0bDAwX0dvVG9QYWdlTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX1kZGQCBA8PZBYCHgdvbmNsaWNrBYgBdmFyIGd0cGkgPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMF9jdGwwMl9jdGwwMF9Hb1RvUGFnZVRleHRCb3gnKTsgaWYoZ3RwaS52YWx1ZSA9PSAxIHx8IGd0cGkudmFsdWUgPT0gJycpcmV0dXJuIGZhbHNlO2QCBg8UKwACPCsACAEADxYUHxACggIeCE1heFZhbHVlBwAAwP///99BHyEFiwNmdW5jdGlvbihzZW5kZXIsIGFyZ3Mpe2lmKGFyZ3MuZ2V0X2tleUNvZGUoKSA9PSAxMyl7c2VuZGVyLnNldF92YWx1ZShzZW5kZXIuZ2V0X3RleHRCb3hWYWx1ZSgpKTsgYXJncy5nZXRfZG9tRXZlbnQoKS5zdG9wUHJvcGFnYXRpb24oKTthcmdzLmdldF9kb21FdmVudCgpLnByZXZlbnREZWZhdWx0KCk7aWYoc2VuZGVyLmdldF92YWx1ZSgpID09ICcnKXthcmdzLnNldF9jYW5jZWwodHJ1ZSk7cmV0dXJuIGZhbHNlO312YXIgYnV0dG9uID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDBfY3RsMDJfY3RsMDBfQ2hhbmdlUGFnZVNpemVMaW5rQnV0dG9uJyk7aWYgKGJ1dHRvbi5jbGljayl7IGJ1dHRvbi5jbGljaygpOyB9ZWxzZXsgZXZhbChidXR0b24uaHJlZik7IH19fR8ABQI0MB4ITWluVmFsdWUHAAAAAAAA8D8fDwUOcmdQYWdlclRleHRCb3geE0VuYWJsZUVtYmVkZGVkU2tpbnNoHhppbnB1dF9mb3JtYXRfRGVjaW1hbERpZ2l0c2YfDGgfDRsAAAAAAAA+QAEAAABkZGQCBw8PFgwfDwUNcmdQYWdlckJ1dHRvbh8ABQZDaGFuZ2UeC0NvbW1hbmROYW1lBQRQYWdlHg9Db21tYW5kQXJndW1lbnQFDkNoYW5nZVBhZ2VTaXplHhBDYXVzZXNWYWxpZGF0aW9uaB8QAgIWAh8iBb4BdmFyIGNwc2kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDBfY3RsMDJfY3RsMDBfQ2hhbmdlUGFnZVNpemVUZXh0Qm94Iik7IGlmICggY3BzaS52YWx1ZSA+IDAgfHwgY3BzaS52YWx1ZSA9PSA0MCl7Y3BzaS52YWx1ZT1NYXRoLm1pbigwLDQwKTtyZXR1cm4gZmFsc2U7fWQCAQ9kFgpmDw8WBB8ABQYmbmJzcDsfEWhkZAIBDw8WBB8ABQYmbmJzcDsfEWhkZAICDw8WAh8ABQZNT05FREFkZAIDDw8WAh8ABQtDT01QUkEgKFMvKWRkAgQPDxYCHwAFClZFTlRBIChTLylkZAIBDw8WAh8RaGQWBGYPZBYKZg8PFgIfAAUGJm5ic3A7ZGQCAQ8PFgIfAAUGJm5ic3A7ZGQCAg8PFgIfAAUGJm5ic3A7ZGQCAw8PFgIfAAUGJm5ic3A7ZGQCBA8PFgIfAAUGJm5ic3A7ZGQCAQ8PFgYfDwUIIHJnUGFnZXIfEAICHxFoZBYCZg8PFgIfIAIDZBYCZg9kFgICAQ9kFgJmD2QWAgIEDw8WBB8PBRByZ1dyYXAgcmdBZHZQYXJ0HxACAmQWCAIBDxQrAAI8KwAIAQAPFgIfIQXEAmZ1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTt2YXIgYnV0dG9uID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDBfY3RsMDNfY3RsMDFfR29Ub1BhZ2VMaW5rQnV0dG9uJyk7aWYgKGJ1dHRvbi5jbGljayl7IGJ1dHRvbi5jbGljaygpOyB9ZWxzZXsgZXZhbChidXR0b24uaHJlZik7IH19fWRkZAIEDw9kFgIfIgWIAXZhciBndHBpID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDBfY3RsMDNfY3RsMDFfR29Ub1BhZ2VUZXh0Qm94Jyk7IGlmKGd0cGkudmFsdWUgPT0gMSB8fCBndHBpLnZhbHVlID09ICcnKXJldHVybiBmYWxzZTtkAgYPFCsAAjwrAAgBAA8WFB8QAoICHyMHAADA////30EfIQWLA2Z1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTtpZihzZW5kZXIuZ2V0X3ZhbHVlKCkgPT0gJycpe2FyZ3Muc2V0X2NhbmNlbCh0cnVlKTtyZXR1cm4gZmFsc2U7fXZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMF9jdGwwM19jdGwwMV9DaGFuZ2VQYWdlU2l6ZUxpbmtCdXR0b24nKTtpZiAoYnV0dG9uLmNsaWNrKXsgYnV0dG9uLmNsaWNrKCk7IH1lbHNleyBldmFsKGJ1dHRvbi5ocmVmKTsgfX19HwAFAjQwHyQHAAAAAAAA8D8fDwUOcmdQYWdlclRleHRCb3gfJWgfJmYfDGgfDRsAAAAAAAA+QAEAAABkZGQCBw8PFgwfDwUNcmdQYWdlckJ1dHRvbh8ABQZDaGFuZ2UfJwUEUGFnZR8oBQ5DaGFuZ2VQYWdlU2l6ZR8paB8QAgIWAh8iBb4BdmFyIGNwc2kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDBfY3RsMDNfY3RsMDFfQ2hhbmdlUGFnZVNpemVUZXh0Qm94Iik7IGlmICggY3BzaS52YWx1ZSA+IDAgfHwgY3BzaS52YWx1ZSA9PSA0MCl7Y3BzaS52YWx1ZT1NYXRoLm1pbigwLDQwKTtyZXR1cm4gZmFsc2U7fWQCAg9kFgZmDw8WAh8RaGRkAgEPDxYCHxFoZGQCAg8PFgIfIAIDFgIfHQUQdGV4dC1hbGlnbjpsZWZ0O2QCAg8PZBYCHx0FDWRpc3BsYXk6bm9uZTsWAmYPPCsADQEADxYEBRtVc2VDb2x1bW5IZWFkZXJzQXNTZWxlY3RvcnNoBRhVc2VSb3dIZWFkZXJzQXNTZWxlY3RvcnNoDxYEHyVoHwxoZGQCAw8UKwACFCsAAhQrAAIPFg4fEAICHw8FJUdyaWRDb250ZXh0TWVudSBHcmlkQ29udGV4dE1lbnVfTWV0cm8fAmcfCgUFTWV0cm8fBQsrBAEfC2gfBmdkDxQrAAEUKwACDxYKHwAFB0NvbHVtbnMeBVZhbHVlBRBDb2x1bW5zQ29udGFpbmVyHw8FCXJnSENNQ29scx4IUG9zdEJhY2toHxACAmQQFgNmAgECAhYDFCsAAg8WBh8qBTFjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMHxzdHJfZGVzTW9uZWRhHytoHwAFBk1PTkVEQWRkFCsAAg8WBh8qBThjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMHxzdHJfbnVtQ290aUNvbXByYVB1Yh8raB8ABQtDT01QUkEgKFMvKWRkFCsAAg8WBh8qBTdjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMHxzdHJfbnVtQ290aVZlbnRhUHViHytoHwAFClZFTlRBIChTLylkZA8WA2ZmZhYBBXNUZWxlcmlrLldlYi5VSS5SYWRNZW51SXRlbSwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxNi4xLjIyNS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0DxQrAQFmFgEFc1RlbGVyaWsuV2ViLlVJLlJhZE1lbnVJdGVtLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDRkZBYCZg8PFgofAAUHQ29sdW1ucx8qBRBDb2x1bW5zQ29udGFpbmVyHw8FCXJnSENNQ29scx8raB8QAgJkFgZmDw8WBh8qBTFjdGwwMF9jcGhDb250ZW50X3JnVGlwb0NhbWJpb19jdGwwMHxzdHJfZGVzTW9uZWRhHytoHwAFBk1PTkVEQWRkAgEPDxYGHyoFOGN0bDAwX2NwaENvbnRlbnRfcmdUaXBvQ2FtYmlvX2N0bDAwfHN0cl9udW1Db3RpQ29tcHJhUHViHytoHwAFC0NPTVBSQSAoUy8pZGQCAg8PFgYfKgU3Y3RsMDBfY3BoQ29udGVudF9yZ1RpcG9DYW1iaW9fY3RsMDB8c3RyX251bUNvdGlWZW50YVB1Yh8raB8ABQpWRU5UQSAoUy8pZGQCDQ9kFgJmD2QWAmYPZBYEAgEPZBYCZg9kFgICAQ8PFgIfAAU5VGlwbyBkZSBDYW1iaW8gTWVzYSBkZSBOZWdvY2lhY2lvbmVzIGRlbCBCQ1IgKFMvIHBvciBVUyQpZGQCAw8PFgIfEWdkFgICAQ88KwAOAgAUKwACDxYMHxICAR8LaB8CZx8FCysEAR8GZx8TZ2QXBAUTU2VsZWN0ZWRDZWxsSW5kZXhlcxYABQ9TZWxlY3RlZEluZGV4ZXMWAAULRWRpdEluZGV4ZXMWAAUIUGFnZVNpemUCKAEWAhYLDwIEFCsABBQrAAUWBB8UGSsCHxUCAmRkZAUQc3RyX2Rlc09wZXJhY2lvbhQrAAUWBB8UGSsCHxUCA2RkZAUWc3RyX251bUNvdGlQcm9tZWRpb1B1YhQrAAUWBB8UGSsCHxUCBGRkZAUUc3RyX251bUNvdGlNaW5pbWFQdWIUKwAFFgQfFBkrAh8VAgVkZGQFFHN0cl9udW1Db3RpTWF4aW1hUHViZGUUKwAACysIATwrAAcACysJARYCHxZkZBYQHxdlHxICAh8YGSsKHxloHxoXAB8bCysIAR8TZx8cFgBkZhYIZg8UKwADD2QWAh8dBQt3aWR0aDoxMDAlO2RkZAIBDxYFFCsAAg8WEB8XZR8SAgIfGBkrCh8ZaB8aFwAfGwsrCAEfE2cfHBYAZBcEBQtfIUl0ZW1Db3VudAICBQZfIURTSUMCAgUIXyFQQ291bnQCAQUQQ3VycmVudFBhZ2VJbmRleGYWAh8eFgIfH2ZkFgRkZGRkFgJnZxYCZg9kFgxmD2QWBGYPDxYGHw8FCCByZ1BhZ2VyHxACAh8RaGQWAmYPDxYCHyACBGQWAmYPZBYCAgEPZBYCZg9kFgICBA8PFgQfDwUQcmdXcmFwIHJnQWR2UGFydB8QAgJkFggCAQ8UKwACPCsACAEADxYCHyEFywJmdW5jdGlvbihzZW5kZXIsIGFyZ3Mpe2lmKGFyZ3MuZ2V0X2tleUNvZGUoKSA9PSAxMyl7c2VuZGVyLnNldF92YWx1ZShzZW5kZXIuZ2V0X3RleHRCb3hWYWx1ZSgpKTsgYXJncy5nZXRfZG9tRXZlbnQoKS5zdG9wUHJvcGFnYXRpb24oKTthcmdzLmdldF9kb21FdmVudCgpLnByZXZlbnREZWZhdWx0KCk7dmFyIGJ1dHRvbiA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdNZXNhTmVnb2NpYWNpb25lc19jdGwwMF9jdGwwMl9jdGwwMF9Hb1RvUGFnZUxpbmtCdXR0b24nKTtpZiAoYnV0dG9uLmNsaWNrKXsgYnV0dG9uLmNsaWNrKCk7IH1lbHNleyBldmFsKGJ1dHRvbi5ocmVmKTsgfX19ZGRkAgQPD2QWAh8iBY8BdmFyIGd0cGkgPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDBfY3RsMDJfY3RsMDBfR29Ub1BhZ2VUZXh0Qm94Jyk7IGlmKGd0cGkudmFsdWUgPT0gMSB8fCBndHBpLnZhbHVlID09ICcnKXJldHVybiBmYWxzZTtkAgYPFCsAAjwrAAgBAA8WFB8QAoICHyMHAAAAAAAAAEAfIQWSA2Z1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTtpZihzZW5kZXIuZ2V0X3ZhbHVlKCkgPT0gJycpe2FyZ3Muc2V0X2NhbmNlbCh0cnVlKTtyZXR1cm4gZmFsc2U7fXZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDBfY3RsMDJfY3RsMDBfQ2hhbmdlUGFnZVNpemVMaW5rQnV0dG9uJyk7aWYgKGJ1dHRvbi5jbGljayl7IGJ1dHRvbi5jbGljaygpOyB9ZWxzZXsgZXZhbChidXR0b24uaHJlZik7IH19fR8ABQEyHyQHAAAAAAAA8D8fDwUOcmdQYWdlclRleHRCb3gfJWgfJmYfDGgfDRsAAAAAAAA0QAEAAABkZGQCBw8PFgwfDwUNcmdQYWdlckJ1dHRvbh8ABQZDaGFuZ2UfJwUEUGFnZR8oBQ5DaGFuZ2VQYWdlU2l6ZR8paB8QAgIWAh8iBcUBdmFyIGNwc2kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3RsMDBfY3BoQ29udGVudF9yZ01lc2FOZWdvY2lhY2lvbmVzX2N0bDAwX2N0bDAyX2N0bDAwX0NoYW5nZVBhZ2VTaXplVGV4dEJveCIpOyBpZiAoIGNwc2kudmFsdWUgPiAyIHx8IGNwc2kudmFsdWUgPT0gNDApe2Nwc2kudmFsdWU9TWF0aC5taW4oMiw0MCk7cmV0dXJuIGZhbHNlO31kAgEPZBYMZg8PFgQfAAUGJm5ic3A7HxFoZGQCAQ8PFgQfAAUGJm5ic3A7HxFoZGQCAg8PFgIfAAUGJm5ic3A7ZGQCAw8PFgIfAAUSUFJPTUVESU8gUE9OREVSQURPZGQCBA8PFgIfAAUGTUlOSU1PZGQCBQ8PFgIfAAUGTUFYSU1PZGQCAQ8PFgIfEWhkFgRmD2QWDGYPDxYCHwAFBiZuYnNwO2RkAgEPDxYCHwAFBiZuYnNwO2RkAgIPDxYCHwAFBiZuYnNwO2RkAgMPDxYCHwAFBiZuYnNwO2RkAgQPDxYCHwAFBiZuYnNwO2RkAgUPDxYCHwAFBiZuYnNwO2RkAgEPDxYGHw8FCCByZ1BhZ2VyHxACAh8RaGQWAmYPDxYCHyACBGQWAmYPZBYCAgEPZBYCZg9kFgICBA8PFgQfDwUQcmdXcmFwIHJnQWR2UGFydB8QAgJkFggCAQ8UKwACPCsACAEADxYCHyEFywJmdW5jdGlvbihzZW5kZXIsIGFyZ3Mpe2lmKGFyZ3MuZ2V0X2tleUNvZGUoKSA9PSAxMyl7c2VuZGVyLnNldF92YWx1ZShzZW5kZXIuZ2V0X3RleHRCb3hWYWx1ZSgpKTsgYXJncy5nZXRfZG9tRXZlbnQoKS5zdG9wUHJvcGFnYXRpb24oKTthcmdzLmdldF9kb21FdmVudCgpLnByZXZlbnREZWZhdWx0KCk7dmFyIGJ1dHRvbiA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdNZXNhTmVnb2NpYWNpb25lc19jdGwwMF9jdGwwM19jdGwwMV9Hb1RvUGFnZUxpbmtCdXR0b24nKTtpZiAoYnV0dG9uLmNsaWNrKXsgYnV0dG9uLmNsaWNrKCk7IH1lbHNleyBldmFsKGJ1dHRvbi5ocmVmKTsgfX19ZGRkAgQPD2QWAh8iBY8BdmFyIGd0cGkgPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDBfY3RsMDNfY3RsMDFfR29Ub1BhZ2VUZXh0Qm94Jyk7IGlmKGd0cGkudmFsdWUgPT0gMSB8fCBndHBpLnZhbHVlID09ICcnKXJldHVybiBmYWxzZTtkAgYPFCsAAjwrAAgBAA8WFB8QAoICHyMHAAAAAAAAAEAfIQWSA2Z1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTtpZihzZW5kZXIuZ2V0X3ZhbHVlKCkgPT0gJycpe2FyZ3Muc2V0X2NhbmNlbCh0cnVlKTtyZXR1cm4gZmFsc2U7fXZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDBfY3RsMDNfY3RsMDFfQ2hhbmdlUGFnZVNpemVMaW5rQnV0dG9uJyk7aWYgKGJ1dHRvbi5jbGljayl7IGJ1dHRvbi5jbGljaygpOyB9ZWxzZXsgZXZhbChidXR0b24uaHJlZik7IH19fR8ABQEyHyQHAAAAAAAA8D8fDwUOcmdQYWdlclRleHRCb3gfJWgfJmYfDGgfDRsAAAAAAAA0QAEAAABkZGQCBw8PFgwfDwUNcmdQYWdlckJ1dHRvbh8ABQZDaGFuZ2UfJwUEUGFnZR8oBQ5DaGFuZ2VQYWdlU2l6ZR8paB8QAgIWAh8iBcUBdmFyIGNwc2kgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiY3RsMDBfY3BoQ29udGVudF9yZ01lc2FOZWdvY2lhY2lvbmVzX2N0bDAwX2N0bDAzX2N0bDAxX0NoYW5nZVBhZ2VTaXplVGV4dEJveCIpOyBpZiAoIGNwc2kudmFsdWUgPiAyIHx8IGNwc2kudmFsdWUgPT0gNDApe2Nwc2kudmFsdWU9TWF0aC5taW4oMiw0MCk7cmV0dXJuIGZhbHNlO31kAgIPDxYCHgRfaWloBQEwZBYMZg8PFgIfEWhkZAIBDw8WBB8ABQYmbmJzcDsfEWhkZAICDw8WAh8ABQZDT01QUkFkZAIDDw8WAh8ABQNTL01kZAIEDw8WAh8ABQNTL01kZAIFDw8WAh8ABQNTL01kZAIDD2QWAmYPDxYCHxFoZGQCBA8PFgIfLAUBMWQWDGYPDxYCHxFoZGQCAQ8PFgQfAAUGJm5ic3A7HxFoZGQCAg8PFgIfAAUFVkVOVEFkZAIDDw8WAh8ABQNTL01kZAIEDw8WAh8ABQNTL01kZAIFDw8WAh8ABQNTL01kZAIFD2QWAmYPDxYCHxFoZGQCAg8PZBYCHx0FDWRpc3BsYXk6bm9uZTsWAmYPPCsADQEADxYEBRtVc2VDb2x1bW5IZWFkZXJzQXNTZWxlY3RvcnNoBRhVc2VSb3dIZWFkZXJzQXNTZWxlY3RvcnNoDxYEHyVoHwxoZGQCAw8UKwACFCsAAhQrAAIPFg4fEAICHw8FJUdyaWRDb250ZXh0TWVudSBHcmlkQ29udGV4dE1lbnVfTWV0cm8fAmcfCgUFTWV0cm8fBQsrBAEfC2gfBmdkDxQrAAEUKwACDxYKHwAFB0NvbHVtbnMfKgUQQ29sdW1uc0NvbnRhaW5lch8PBQlyZ0hDTUNvbHMfK2gfEAICZBAWBGYCAQICAgMWBBQrAAIPFgYfKgU7Y3RsMDBfY3BoQ29udGVudF9yZ01lc2FOZWdvY2lhY2lvbmVzX2N0bDAwfHN0cl9kZXNPcGVyYWNpb24fK2gfAAUQc3RyX2Rlc09wZXJhY2lvbmRkFCsAAg8WBh8qBUFjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDB8c3RyX251bUNvdGlQcm9tZWRpb1B1Yh8raB8ABRJQUk9NRURJTyBQT05ERVJBRE9kZBQrAAIPFgYfKgU/Y3RsMDBfY3BoQ29udGVudF9yZ01lc2FOZWdvY2lhY2lvbmVzX2N0bDAwfHN0cl9udW1Db3RpTWluaW1hUHViHytoHwAFBk1JTklNT2RkFCsAAg8WBh8qBT9jdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDB8c3RyX251bUNvdGlNYXhpbWFQdWIfK2gfAAUGTUFYSU1PZGQPFgRmZmZmFgEFc1RlbGVyaWsuV2ViLlVJLlJhZE1lbnVJdGVtLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQPFCsBAWYWAQVzVGVsZXJpay5XZWIuVUkuUmFkTWVudUl0ZW0sIFRlbGVyaWsuV2ViLlVJLCBWZXJzaW9uPTIwMTYuMS4yMjUuNDAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MTIxZmFlNzgxNjViYTNkNGRkFgJmDw8WCh8ABQdDb2x1bW5zHyoFEENvbHVtbnNDb250YWluZXIfDwUJcmdIQ01Db2xzHytoHxACAmQWCGYPDxYGHyoFO2N0bDAwX2NwaENvbnRlbnRfcmdNZXNhTmVnb2NpYWNpb25lc19jdGwwMHxzdHJfZGVzT3BlcmFjaW9uHytoHwAFEHN0cl9kZXNPcGVyYWNpb25kZAIBDw8WBh8qBUFjdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDB8c3RyX251bUNvdGlQcm9tZWRpb1B1Yh8raB8ABRJQUk9NRURJTyBQT05ERVJBRE9kZAICDw8WBh8qBT9jdGwwMF9jcGhDb250ZW50X3JnTWVzYU5lZ29jaWFjaW9uZXNfY3RsMDB8c3RyX251bUNvdGlNaW5pbWFQdWIfK2gfAAUGTUlOSU1PZGQCAw8PFgYfKgU/Y3RsMDBfY3BoQ29udGVudF9yZ01lc2FOZWdvY2lhY2lvbmVzX2N0bDAwfHN0cl9udW1Db3RpTWF4aW1hUHViHytoHwAFBk1BWElNT2RkAg8PFgIfEWgWAmYPZBYCZg9kFgQCAQ9kFgJmD2QWAgIBDw8WAh8ABRhEZXJlY2hvIEVzcGVjaWFsIGRlIEdpcm9kZAIDD2QWAgIBDzwrAA4CABQrAAIPFgYfEgIBHwULKwQBHxNnZBcEBRNTZWxlY3RlZENlbGxJbmRleGVzFgAFD1NlbGVjdGVkSW5kZXhlcxYABQtFZGl0SW5kZXhlcxYABQhQYWdlU2l6ZQIoARYCFgsPAgIUKwACPCsABQEAFgQfFBkrAh8VAgI8KwAFAQAWBB8UGSsCHxUCA2RlFCsAAAsrCAE8KwAHAAsrCQEWAh8WZGQWEB8XZR8SAgEfGBkrCh8ZaB8aFwAfGwsrCAEfE2cfHBYAZGYWCGYPFCsAAw9kFgIfHQULd2lkdGg6MTAwJTtkZGQCAQ8WBRQrAAIPFhAfF2UfEgIBHxgZKwofGWgfGhcAHxsLKwgBHxNnHxwWAGQXBAULXyFJdGVtQ291bnQCAQUGXyFEU0lDAgEFCF8hUENvdW50AgEFEEN1cnJlbnRQYWdlSW5kZXhmFgIfHhYCHx9mZBYCZGQWAmdnFgJmD2QWBmYPZBYEZg8PFgIfEWhkFgJmDw8WAh8gAgJkFgJmD2QWAgIBD2QWAmYPZBYCAgQPDxYEHw8FEHJnV3JhcCByZ0FkdlBhcnQfEAICZBYIAgEPFCsAAjwrAAgBAA8WAh8hBcUCZnVuY3Rpb24oc2VuZGVyLCBhcmdzKXtpZihhcmdzLmdldF9rZXlDb2RlKCkgPT0gMTMpe3NlbmRlci5zZXRfdmFsdWUoc2VuZGVyLmdldF90ZXh0Qm94VmFsdWUoKSk7IGFyZ3MuZ2V0X2RvbUV2ZW50KCkuc3RvcFByb3BhZ2F0aW9uKCk7YXJncy5nZXRfZG9tRXZlbnQoKS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnRGVyZWNob0dpcm9fY3RsMDBfY3RsMDJfY3RsMDBfR29Ub1BhZ2VMaW5rQnV0dG9uJyk7aWYgKGJ1dHRvbi5jbGljayl7IGJ1dHRvbi5jbGljaygpOyB9ZWxzZXsgZXZhbChidXR0b24uaHJlZik7IH19fWRkZAIEDw9kFgIfIgWJAXZhciBndHBpID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ0RlcmVjaG9HaXJvX2N0bDAwX2N0bDAyX2N0bDAwX0dvVG9QYWdlVGV4dEJveCcpOyBpZihndHBpLnZhbHVlID09IDEgfHwgZ3RwaS52YWx1ZSA9PSAnJylyZXR1cm4gZmFsc2U7ZAIGDxQrAAI8KwAIAQAPFhQfEAKCAh8jBwAAAAAAAPA/HyEFjANmdW5jdGlvbihzZW5kZXIsIGFyZ3Mpe2lmKGFyZ3MuZ2V0X2tleUNvZGUoKSA9PSAxMyl7c2VuZGVyLnNldF92YWx1ZShzZW5kZXIuZ2V0X3RleHRCb3hWYWx1ZSgpKTsgYXJncy5nZXRfZG9tRXZlbnQoKS5zdG9wUHJvcGFnYXRpb24oKTthcmdzLmdldF9kb21FdmVudCgpLnByZXZlbnREZWZhdWx0KCk7aWYoc2VuZGVyLmdldF92YWx1ZSgpID09ICcnKXthcmdzLnNldF9jYW5jZWwodHJ1ZSk7cmV0dXJuIGZhbHNlO312YXIgYnV0dG9uID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ0RlcmVjaG9HaXJvX2N0bDAwX2N0bDAyX2N0bDAwX0NoYW5nZVBhZ2VTaXplTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX0fAAUBMR8kBwAAAAAAAPA/Hw8FDnJnUGFnZXJUZXh0Qm94HyVoHyZmHwxoHw0bAAAAAAAANEABAAAAZGRkAgcPDxYMHw8FDXJnUGFnZXJCdXR0b24fAAUGQ2hhbmdlHycFBFBhZ2UfKAUOQ2hhbmdlUGFnZVNpemUfKWgfEAICFgIfIgW/AXZhciBjcHNpID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImN0bDAwX2NwaENvbnRlbnRfcmdEZXJlY2hvR2lyb19jdGwwMF9jdGwwMl9jdGwwMF9DaGFuZ2VQYWdlU2l6ZVRleHRCb3giKTsgaWYgKCBjcHNpLnZhbHVlID4gMSB8fCBjcHNpLnZhbHVlID09IDQwKXtjcHNpLnZhbHVlPU1hdGgubWluKDEsNDApO3JldHVybiBmYWxzZTt9ZAIBD2QWCGYPDxYCHwAFBiZuYnNwO2RkAgEPDxYCHwAFBiZuYnNwO2RkAgIPDxYCHwAFBk1PTkVEQWRkAgMPDxYCHwAFF1BST01FRElPIFBPTkRFUkFETyAoUy8pZGQCAQ9kFgRmD2QWCGYPDxYCHwAFBiZuYnNwO2RkAgEPDxYCHwAFBiZuYnNwO2RkAgIPDxYCHwAFBiZuYnNwO2RkAgMPDxYCHwAFBiZuYnNwO2RkAgEPDxYCHxFoZBYCZg8PFgIfIAICZBYCZg9kFgICAQ9kFgJmD2QWAgIEDw8WBB8PBRByZ1dyYXAgcmdBZHZQYXJ0HxACAmQWCAIBDxQrAAI8KwAIAQAPFgIfIQXFAmZ1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTt2YXIgYnV0dG9uID0gJGdldCgnY3RsMDBfY3BoQ29udGVudF9yZ0RlcmVjaG9HaXJvX2N0bDAwX2N0bDAzX2N0bDAxX0dvVG9QYWdlTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX1kZGQCBA8PZBYCHyIFiQF2YXIgZ3RwaSA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdEZXJlY2hvR2lyb19jdGwwMF9jdGwwM19jdGwwMV9Hb1RvUGFnZVRleHRCb3gnKTsgaWYoZ3RwaS52YWx1ZSA9PSAxIHx8IGd0cGkudmFsdWUgPT0gJycpcmV0dXJuIGZhbHNlO2QCBg8UKwACPCsACAEADxYUHxACggIfIwcAAAAAAADwPx8hBYwDZnVuY3Rpb24oc2VuZGVyLCBhcmdzKXtpZihhcmdzLmdldF9rZXlDb2RlKCkgPT0gMTMpe3NlbmRlci5zZXRfdmFsdWUoc2VuZGVyLmdldF90ZXh0Qm94VmFsdWUoKSk7IGFyZ3MuZ2V0X2RvbUV2ZW50KCkuc3RvcFByb3BhZ2F0aW9uKCk7YXJncy5nZXRfZG9tRXZlbnQoKS5wcmV2ZW50RGVmYXVsdCgpO2lmKHNlbmRlci5nZXRfdmFsdWUoKSA9PSAnJyl7YXJncy5zZXRfY2FuY2VsKHRydWUpO3JldHVybiBmYWxzZTt9dmFyIGJ1dHRvbiA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdEZXJlY2hvR2lyb19jdGwwMF9jdGwwM19jdGwwMV9DaGFuZ2VQYWdlU2l6ZUxpbmtCdXR0b24nKTtpZiAoYnV0dG9uLmNsaWNrKXsgYnV0dG9uLmNsaWNrKCk7IH1lbHNleyBldmFsKGJ1dHRvbi5ocmVmKTsgfX19HwAFATEfJAcAAAAAAADwPx8PBQ5yZ1BhZ2VyVGV4dEJveB8laB8mZh8MaB8NGwAAAAAAADRAAQAAAGRkZAIHDw8WDB8PBQ1yZ1BhZ2VyQnV0dG9uHwAFBkNoYW5nZR8nBQRQYWdlHygFDkNoYW5nZVBhZ2VTaXplHyloHxACAhYCHyIFvwF2YXIgY3BzaSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjdGwwMF9jcGhDb250ZW50X3JnRGVyZWNob0dpcm9fY3RsMDBfY3RsMDNfY3RsMDFfQ2hhbmdlUGFnZVNpemVUZXh0Qm94Iik7IGlmICggY3BzaS52YWx1ZSA+IDEgfHwgY3BzaS52YWx1ZSA9PSA0MCl7Y3BzaS52YWx1ZT1NYXRoLm1pbigxLDQwKTtyZXR1cm4gZmFsc2U7fWQCAg8PFgIfLAUBMGQWBgIBDw8WAh8ABQYmbmJzcDtkZAICDw8WAh8ABQpELkUuRy4gVVMkZGQCAw8PFgIfAAUDUy9NZGQCAg8PZBYCHx0FDWRpc3BsYXk6bm9uZTsWAmYPPCsADQEADxYEBRtVc2VDb2x1bW5IZWFkZXJzQXNTZWxlY3RvcnNoBRhVc2VSb3dIZWFkZXJzQXNTZWxlY3RvcnNoDxYEHyVoHwxoZGQCAw8UKwACFCsAAhQrAAJkEBYBZhYBFCsAAmRkDxYBZhYBBXNUZWxlcmlrLldlYi5VSS5SYWRNZW51SXRlbSwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxNi4xLjIyNS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0ZGRkAhEPZBYCZg9kFgJmD2QWBAIBD2QWAmYPZBYCAgEPDxYCHwAFPFRpcG8gZGUgQ2FtYmlvIE1lcmNhZG8gUHJvZmVzaW9uYWwsIFByb21lZGlvIFBvbmRlcmFkbyAoUy8gKWRkAgMPDxYCHxFnZBYCAgEPPCsADgIAFCsAAg8WDB8SAgEfC2gfAmcfBQsrBAEfBmcfE2dkFwQFE1NlbGVjdGVkQ2VsbEluZGV4ZXMWAAUPU2VsZWN0ZWRJbmRleGVzFgAFC0VkaXRJbmRleGVzFgAFCFBhZ2VTaXplAigBFgIWCw8CAhQrAAIUKwAFFgQfFBkrAh8VAgJkZGQFDXN0cl9kZXNNb25lZGEUKwAFFgQfFBkrAh8VAgNkZGQFF3N0cl9udW1GYWN0b3JNZXJjYWRvUHViZGUUKwAACysIATwrAAcACysJARYCHxZkZBYQHxdlHxICAR8YGSsKHxloHxoXAB8bCysIAR8TZx8cFgBkZhYIZg8UKwADD2QWAh8dBQt3aWR0aDoxMDAlO2RkZAIBDxYFFCsAAg8WEB8XZR8SAgEfGBkrCh8ZaB8aFwAfGwsrCAEfE2cfHBYAZBcEBQtfIUl0ZW1Db3VudAIBBQZfIURTSUMCAQUIXyFQQ291bnQCAQUQQ3VycmVudFBhZ2VJbmRleGYWAh8eFgIfH2ZkFgJkZBYCZ2cWAmYPZBYIZg9kFgRmDw8WBh8PBQggcmdQYWdlch8QAgIfEWhkFgJmDw8WAh8gAgJkFgJmD2QWAgIBD2QWAmYPZBYCAgQPDxYEHw8FEHJnV3JhcCByZ0FkdlBhcnQfEAICZBYIAgEPFCsAAjwrAAgBAA8WAh8hBcwCZnVuY3Rpb24oc2VuZGVyLCBhcmdzKXtpZihhcmdzLmdldF9rZXlDb2RlKCkgPT0gMTMpe3NlbmRlci5zZXRfdmFsdWUoc2VuZGVyLmdldF90ZXh0Qm94VmFsdWUoKSk7IGFyZ3MuZ2V0X2RvbUV2ZW50KCkuc3RvcFByb3BhZ2F0aW9uKCk7YXJncy5nZXRfZG9tRXZlbnQoKS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwX2N0bDAyX2N0bDAwX0dvVG9QYWdlTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX1kZGQCBA8PZBYCHyIFkAF2YXIgZ3RwaSA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDBfY3RsMDJfY3RsMDBfR29Ub1BhZ2VUZXh0Qm94Jyk7IGlmKGd0cGkudmFsdWUgPT0gMSB8fCBndHBpLnZhbHVlID09ICcnKXJldHVybiBmYWxzZTtkAgYPFCsAAjwrAAgBAA8WFB8QAoICHyMHAAAAAAAA8D8fIQWTA2Z1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTtpZihzZW5kZXIuZ2V0X3ZhbHVlKCkgPT0gJycpe2FyZ3Muc2V0X2NhbmNlbCh0cnVlKTtyZXR1cm4gZmFsc2U7fXZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwX2N0bDAyX2N0bDAwX0NoYW5nZVBhZ2VTaXplTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX0fAAUBMR8kBwAAAAAAAPA/Hw8FDnJnUGFnZXJUZXh0Qm94HyVoHyZmHwxoHw0bAAAAAAAANEABAAAAZGRkAgcPDxYMHw8FDXJnUGFnZXJCdXR0b24fAAUGQ2hhbmdlHycFBFBhZ2UfKAUOQ2hhbmdlUGFnZVNpemUfKWgfEAICFgIfIgXGAXZhciBjcHNpID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImN0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDBfY3RsMDJfY3RsMDBfQ2hhbmdlUGFnZVNpemVUZXh0Qm94Iik7IGlmICggY3BzaS52YWx1ZSA+IDEgfHwgY3BzaS52YWx1ZSA9PSA0MCl7Y3BzaS52YWx1ZT1NYXRoLm1pbigxLDQwKTtyZXR1cm4gZmFsc2U7fWQCAQ9kFghmDw8WBB8ABQYmbmJzcDsfEWhkZAIBDw8WBB8ABQYmbmJzcDsfEWhkZAICDw8WAh8ABQZNT05FREFkZAIDDw8WAh8ABRdQUk9NRURJTyBQT05ERVJBRE8gKFMvKWRkAgEPDxYCHxFoZBYEZg9kFghmDw8WAh8ABQYmbmJzcDtkZAIBDw8WAh8ABQYmbmJzcDtkZAICDw8WAh8ABQYmbmJzcDtkZAIDDw8WAh8ABQYmbmJzcDtkZAIBDw8WBh8PBQggcmdQYWdlch8QAgIfEWhkFgJmDw8WAh8gAgJkFgJmD2QWAgIBD2QWAmYPZBYCAgQPDxYEHw8FEHJnV3JhcCByZ0FkdlBhcnQfEAICZBYIAgEPFCsAAjwrAAgBAA8WAh8hBcwCZnVuY3Rpb24oc2VuZGVyLCBhcmdzKXtpZihhcmdzLmdldF9rZXlDb2RlKCkgPT0gMTMpe3NlbmRlci5zZXRfdmFsdWUoc2VuZGVyLmdldF90ZXh0Qm94VmFsdWUoKSk7IGFyZ3MuZ2V0X2RvbUV2ZW50KCkuc3RvcFByb3BhZ2F0aW9uKCk7YXJncy5nZXRfZG9tRXZlbnQoKS5wcmV2ZW50RGVmYXVsdCgpO3ZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwX2N0bDAzX2N0bDAxX0dvVG9QYWdlTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX1kZGQCBA8PZBYCHyIFkAF2YXIgZ3RwaSA9ICRnZXQoJ2N0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDBfY3RsMDNfY3RsMDFfR29Ub1BhZ2VUZXh0Qm94Jyk7IGlmKGd0cGkudmFsdWUgPT0gMSB8fCBndHBpLnZhbHVlID09ICcnKXJldHVybiBmYWxzZTtkAgYPFCsAAjwrAAgBAA8WFB8QAoICHyMHAAAAAAAA8D8fIQWTA2Z1bmN0aW9uKHNlbmRlciwgYXJncyl7aWYoYXJncy5nZXRfa2V5Q29kZSgpID09IDEzKXtzZW5kZXIuc2V0X3ZhbHVlKHNlbmRlci5nZXRfdGV4dEJveFZhbHVlKCkpOyBhcmdzLmdldF9kb21FdmVudCgpLnN0b3BQcm9wYWdhdGlvbigpO2FyZ3MuZ2V0X2RvbUV2ZW50KCkucHJldmVudERlZmF1bHQoKTtpZihzZW5kZXIuZ2V0X3ZhbHVlKCkgPT0gJycpe2FyZ3Muc2V0X2NhbmNlbCh0cnVlKTtyZXR1cm4gZmFsc2U7fXZhciBidXR0b24gPSAkZ2V0KCdjdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwX2N0bDAzX2N0bDAxX0NoYW5nZVBhZ2VTaXplTGlua0J1dHRvbicpO2lmIChidXR0b24uY2xpY2speyBidXR0b24uY2xpY2soKTsgfWVsc2V7IGV2YWwoYnV0dG9uLmhyZWYpOyB9fX0fAAUBMR8kBwAAAAAAAPA/Hw8FDnJnUGFnZXJUZXh0Qm94HyVoHyZmHwxoHw0bAAAAAAAANEABAAAAZGRkAgcPDxYMHw8FDXJnUGFnZXJCdXR0b24fAAUGQ2hhbmdlHycFBFBhZ2UfKAUOQ2hhbmdlUGFnZVNpemUfKWgfEAICFgIfIgXGAXZhciBjcHNpID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImN0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDBfY3RsMDNfY3RsMDFfQ2hhbmdlUGFnZVNpemVUZXh0Qm94Iik7IGlmICggY3BzaS52YWx1ZSA+IDEgfHwgY3BzaS52YWx1ZSA9PSA0MCl7Y3BzaS52YWx1ZT1NYXRoLm1pbigxLDQwKTtyZXR1cm4gZmFsc2U7fWQCAg8PFgIfLAUBMGQWCGYPDxYCHxFoZGQCAQ8PFgQfAAUGJm5ic3A7HxFoZGQCAg8PFgIfAAUORMOzbGFyIGRlIE4uQS5kZAIDDw8WAh8ABQNTL01kZAIDD2QWAmYPDxYCHxFoZGQCAg8PZBYCHx0FDWRpc3BsYXk6bm9uZTsWAmYPPCsADQEADxYEBRtVc2VDb2x1bW5IZWFkZXJzQXNTZWxlY3RvcnNoBRhVc2VSb3dIZWFkZXJzQXNTZWxlY3RvcnNoDxYEHyVoHwxoZGQCAw8UKwACFCsAAhQrAAIPFg4fEAICHw8FJUdyaWRDb250ZXh0TWVudSBHcmlkQ29udGV4dE1lbnVfTWV0cm8fAmcfCgUFTWV0cm8fBQsrBAEfC2gfBmdkDxQrAAEUKwACDxYKHwAFB0NvbHVtbnMfKgUQQ29sdW1uc0NvbnRhaW5lch8PBQlyZ0hDTUNvbHMfK2gfEAICZBAWAmYCARYCFCsAAg8WBh8qBTljdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwfHN0cl9kZXNNb25lZGEfK2gfAAUGTU9ORURBZGQUKwACDxYGHyoFQ2N0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDB8c3RyX251bUZhY3Rvck1lcmNhZG9QdWIfK2gfAAUXUFJPTUVESU8gUE9OREVSQURPIChTLylkZA8WAmZmFgEFc1RlbGVyaWsuV2ViLlVJLlJhZE1lbnVJdGVtLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDE2LjEuMjI1LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQPFCsBAWYWAQVzVGVsZXJpay5XZWIuVUkuUmFkTWVudUl0ZW0sIFRlbGVyaWsuV2ViLlVJLCBWZXJzaW9uPTIwMTYuMS4yMjUuNDAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MTIxZmFlNzgxNjViYTNkNGRkFgJmDw8WCh8ABQdDb2x1bW5zHyoFEENvbHVtbnNDb250YWluZXIfDwUJcmdIQ01Db2xzHytoHxACAmQWBGYPDxYGHyoFOWN0bDAwX2NwaENvbnRlbnRfcmdNZXJjYWRvUHJvZmVzaW9uYWxfY3RsMDB8c3RyX2Rlc01vbmVkYR8raB8ABQZNT05FREFkZAIBDw8WBh8qBUNjdGwwMF9jcGhDb250ZW50X3JnTWVyY2Fkb1Byb2Zlc2lvbmFsX2N0bDAwfHN0cl9udW1GYWN0b3JNZXJjYWRvUHViHytoHwAFF1BST01FRElPIFBPTkRFUkFETyAoUy8pZGQCEw9kFgICAQ9kFgICAQ8WAh8AZWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFhIFGGN0bDAwJGNwaENvbnRlbnQkcmRwRGF0ZQUhY3RsMDAkY3BoQ29udGVudCRyZHBEYXRlJGNhbGVuZGFyBSFjdGwwMCRjcGhDb250ZW50JHJkcERhdGUkY2FsZW5kYXIFHWN0bDAwJGNwaENvbnRlbnQkcmdUaXBvQ2FtYmlvBSZjdGwwMCRjcGhDb250ZW50JHJnVGlwb0NhbWJpbyRyZ2hjTWVudQVgY3RsMDAkY3BoQ29udGVudCRyZ1RpcG9DYW1iaW8kcmdoY01lbnUkaTAkaTAkY2hrY3RsMDAkY3BoQ29udGVudCRyZ1RpcG9DYW1iaW8kY3RsMDBzdHJfZGVzTW9uZWRhBWdjdGwwMCRjcGhDb250ZW50JHJnVGlwb0NhbWJpbyRyZ2hjTWVudSRpMCRpMSRjaGtjdGwwMCRjcGhDb250ZW50JHJnVGlwb0NhbWJpbyRjdGwwMHN0cl9udW1Db3RpQ29tcHJhUHViBWZjdGwwMCRjcGhDb250ZW50JHJnVGlwb0NhbWJpbyRyZ2hjTWVudSRpMCRpMiRjaGtjdGwwMCRjcGhDb250ZW50JHJnVGlwb0NhbWJpbyRjdGwwMHN0cl9udW1Db3RpVmVudGFQdWIFJGN0bDAwJGNwaENvbnRlbnQkcmdNZXNhTmVnb2NpYWNpb25lcwUtY3RsMDAkY3BoQ29udGVudCRyZ01lc2FOZWdvY2lhY2lvbmVzJHJnaGNNZW51BXFjdGwwMCRjcGhDb250ZW50JHJnTWVzYU5lZ29jaWFjaW9uZXMkcmdoY01lbnUkaTAkaTAkY2hrY3RsMDAkY3BoQ29udGVudCRyZ01lc2FOZWdvY2lhY2lvbmVzJGN0bDAwc3RyX2Rlc09wZXJhY2lvbgV3Y3RsMDAkY3BoQ29udGVudCRyZ01lc2FOZWdvY2lhY2lvbmVzJHJnaGNNZW51JGkwJGkxJGNoa2N0bDAwJGNwaENvbnRlbnQkcmdNZXNhTmVnb2NpYWNpb25lcyRjdGwwMHN0cl9udW1Db3RpUHJvbWVkaW9QdWIFdWN0bDAwJGNwaENvbnRlbnQkcmdNZXNhTmVnb2NpYWNpb25lcyRyZ2hjTWVudSRpMCRpMiRjaGtjdGwwMCRjcGhDb250ZW50JHJnTWVzYU5lZ29jaWFjaW9uZXMkY3RsMDBzdHJfbnVtQ290aU1pbmltYVB1YgV1Y3RsMDAkY3BoQ29udGVudCRyZ01lc2FOZWdvY2lhY2lvbmVzJHJnaGNNZW51JGkwJGkzJGNoa2N0bDAwJGNwaENvbnRlbnQkcmdNZXNhTmVnb2NpYWNpb25lcyRjdGwwMHN0cl9udW1Db3RpTWF4aW1hUHViBSVjdGwwMCRjcGhDb250ZW50JHJnTWVyY2Fkb1Byb2Zlc2lvbmFsBS5jdGwwMCRjcGhDb250ZW50JHJnTWVyY2Fkb1Byb2Zlc2lvbmFsJHJnaGNNZW51BXBjdGwwMCRjcGhDb250ZW50JHJnTWVyY2Fkb1Byb2Zlc2lvbmFsJHJnaGNNZW51JGkwJGkwJGNoa2N0bDAwJGNwaENvbnRlbnQkcmdNZXJjYWRvUHJvZmVzaW9uYWwkY3RsMDBzdHJfZGVzTW9uZWRhBXpjdGwwMCRjcGhDb250ZW50JHJnTWVyY2Fkb1Byb2Zlc2lvbmFsJHJnaGNNZW51JGkwJGkxJGNoa2N0bDAwJGNwaENvbnRlbnQkcmdNZXJjYWRvUHJvZmVzaW9uYWwkY3RsMDBzdHJfbnVtRmFjdG9yTWVyY2Fkb1B1Yr82Xcd6ImYgZqApfeZccOcO2gr3+mUF1xqSTRVVEP0S',
'__VIEWSTATEGENERATOR' => 'E7CB0DFC',
'__EVENTVALIDATION' => ' /wEdAA0njgQ7fOFlXoelF12rtY6zlawXGEyscjwHM2iJ+8drUdz81GR1o7NJCyAXkQgagG3oPDMR8cgDMq3ctkhYgDUUkDrtx6OsxZPmoj7osHpaKyU2XbOTnn2EUbo/DxGMf1gMA6gnz7RWzjyj9StPNYblxCkN4/RCrnIEtB6tMAslNTuP8cV28PNzqJE6yDmh7FpCFapZM7Jl53S7qcTWXvZp1tbD+pVUxf5jNOk1JgMsvxKd803JQJncAXy03EPTbLChbwUyUT5al7nEJ7ztHFBmnu7foD0SUZYq99zcdrYNx/OkKwiEPlSI7Cs+rIL+CWg=',
//        '__ASYNCPOST' => 'true',
'ctl00$cphContent$btnConsultar' => 'Consultar'
            ]
        ]);

        $html = $response->getBody()->getContents();
        echo($html);
        $xp = new DiDom($html);
        $sub_headings = $xp->find('.rgMasterTable tbody tr');
        foreach($sub_headings as $sub_heading)
        {
            $tds = $sub_heading->find('td');
            dd($tds[1]->text());
//            foreach($tds as $td)
//            {
//                dd($td->html());
//            }
            //if($sub_heading->text() !== 'See also') {

//                echo $sub_heading->html();
            //} else {
            //    break;
            //}
        }


    }
}
